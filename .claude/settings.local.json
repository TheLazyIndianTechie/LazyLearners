{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npx:*)",
      "Bash(tree:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(coderabbit review:*)",
      "Bash(find . -name:*)",
      "Bash(awk -f scripts/:*)",
      "Bash(xargs kill -TERM:*)",
      "Bash(lsof:*)",
      "Bash(git rm:*)",
      "WebSearch",
      "Bash(curl:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "mcp__firecrawl-mcp__firecrawl_search",
      "mcp__firecrawl-mcp__firecrawl_scrape",
      "Bash(git push:*)",
      "Bash(vercel:*)",
      "mcp__dodopayments_api__list_supported_countries_misc",
      "mcp__dodopayments_api__create_products",
      "mcp__dodopayments_api__list_payments",
      "mcp__dodopayments_api__list_subscriptions",
      "mcp__dodopayments_api__list_products",
      "mcp__dodopayments_api__list_customers",
      "mcp__dodopayments_api__create_webhooks",
      "mcp__dodopayments_api__retrieve_secret_webhooks",
      "Bash(sqlite3:*)",
      "Bash(git remote add:*)",
      "Bash(node:*)",
      "mcp__linear__list_teams",
      "mcp__linear__list_projects",
      "mcp__linear__list_issue_labels",
      "mcp__linear__create_issue_label",
      "mcp__linear__create_project",
      "mcp__linear__create_issue",
      "mcp__linear__update_issue",
      "mcp__linear__list_issues",
      "mcp__linear__create_comment",
      "mcp__linear__get_project",
      "mcp__linear__update_project",
      "mcp__vercel__list_teams",
      "mcp__vercel__list_projects",
      "mcp__vercel__get_project",
      "mcp__vercel__list_deployments",
      "mcp__vercel__web_fetch_vercel_url",
      "mcp__linear__get_team",
      "mcp__linear__get_issue",
      "mcp__vercel__deploy_to_vercel",
      "Bash(BASE_URL=https://gamelearn-platform-gzfn2pr5q-thelazyindiantechies-projects.vercel.app node scripts/validate-video-streaming-fix.js)",
      "mcp__vercel__get_deployment_build_logs",
      "mcp__jam__getDetails",
      "mcp__jam__getConsoleLogs",
      "mcp__jam__getNetworkRequests",
      "mcp__jam__getUserEvents",
      "mcp__vercel__get_deployment",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:jam.dev)",
      "mcp__chrome-devtools__new_page",
      "mcp__chrome-devtools__take_snapshot",
      "mcp__chrome-devtools__list_console_messages",
      "mcp__chrome-devtools__click",
      "mcp__chrome-devtools__navigate_page",
      "mcp__chrome-devtools__fill",
      "mcp__jam__analyzeVideo",
      "mcp__chrome-devtools__list_pages",
      "Bash(cat:*)",
      "mcp__chrome-devtools__wait_for",
      "mcp__chrome-devtools__fill_form",
      "Bash(xargs ps:*)",
      "mcp__chrome-devtools__select_page",
      "mcp__chrome-devtools__resize_page",
      "mcp__chrome-devtools__take_screenshot",
      "Bash(rm:*)",
      "Read(//var/folders/_j/s2wqqyrd4tx7rj52yn51klr80000gn/T/chrome-devtools-mcp-1uYbmw/**)",
      "Bash(task-master:*)",
      "Read(//Users/vinayvidyasagar/Dev/LazyGameDevs/**)",
      "mcp__task-master-ai__analyze_project_complexity",
      "mcp__task-master-ai__next_task",
      "mcp__task-master-ai__get_task",
      "mcp__task-master-ai__expand_task",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\" npx prisma db push --force-reset --accept-data-loss)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=yes npx prisma db push --force-reset --accept-data-loss)",
      "Bash(tee:*)",
      "Bash(export PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\")",
      "mcp__task-master-ai__set_task_status",
      "Bash(git restore:*)",
      "Bash(grep:*)",
      "Bash(npm uninstall:*)",
      "mcp__task-master-ai__get_tasks",
      "mcp__task-master-ai__clear_subtasks",
      "mcp__task-master-ai__add_subtask"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "shadcn"
  ],
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path' | { read file_path; if echo \\\"$file_path\\\" | grep -q '\\\\.ts$'; then npx prettier --write \\\"$file_path\\\"; fi; }"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "notify-send 'Claude Code' 'Awaiting your input'"
          }
        ]
      }
    ]
  }
}